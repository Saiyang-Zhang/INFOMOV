<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
      <FILENAME>game.cpp</FILENAME>
      <LINE>244</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>取消对 NULL 指针“ref8”的引用。</DESCRIPTION>
    <FUNCTION>Tmpl8::Game::Init</FUNCTION>
    <DECORATED>?Init@Game@Tmpl8@@UEAAXXZ</DECORATED>
    <FUNCLINE>218</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>220</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>221</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>222</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>223</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>224</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>225</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>225</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>225</LINE>
        <COLUMN>47</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>225</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>225</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>225</LINE>
        <COLUMN>47</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>225</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>225</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>226</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>226</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>227</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>228</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>226</LINE>
        <COLUMN>32</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>226</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>227</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>228</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>226</LINE>
        <COLUMN>32</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>226</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>231</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>231</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>231</LINE>
        <COLUMN>43</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>231</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>231</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>231</LINE>
        <COLUMN>43</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>231</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>231</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>232</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>233</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>241</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>242</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>243</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>“ref8”可能为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>244</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>244</LINE>
        <COLUMN>19</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此循环(假定“i&lt;SCRSIZE”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
        <FILENAME>game.cpp</FILENAME>
        <LINE>244</LINE>
        <COLUMN>43</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>已取消对“ref8”的引用，但可能仍为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\</FILEPATH>
      <FILENAME>game.cpp</FILENAME>
      <LINE>298</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6328</DEFECTCODE>
    <DESCRIPTION>大小不匹配: 已将“__int64”作为 _Param_(3) 传递，但需要使用“int”来调用“sprintf”。</DESCRIPTION>
    <FUNCTION>Tmpl8::Game::Tick</FUNCTION>
    <DECORATED>?Tick@Game@Tmpl8@@UEAAXM@Z</DECORATED>
    <FUNCLINE>265</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>opencl.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>函数使用堆叠的 "16400" 字节。请考虑将一些数据移动到堆。</DESCRIPTION>
    <FUNCTION>FatalError</FUNCTION>
    <DECORATED>?FatalError@@YAXPEBDZZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>opencl.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>取消对 NULL 指针“devices”的引用。</DESCRIPTION>
    <FUNCTION>getFirstDevice</FUNCTION>
    <DECORATED>?getFirstDevice@@YAPEAU_cl_device_id@@PEAU_cl_context@@@Z</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>105</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>106</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>107</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>108</LINE>
        <COLUMN>9</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>“devices”可能为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>109</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“devices”是“clGetContextInfo”的输入/输出参数(在 d:\zsyblah\documents\codes\infomov\lib\opencl\inc\cl\cl.h:703 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>110</LINE>
        <COLUMN>14</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>已取消对“devices”的引用，但可能仍为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>opencl.cpp</FILENAME>
      <LINE>133</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>取消对 NULL 指针“clPlatformIDs”的引用。</DESCRIPTION>
    <FUNCTION>getPlatformID</FUNCTION>
    <DECORATED>?getPlatformID@@YAHPEAPEAU_cl_platform_id@@@Z</DECORATED>
    <FUNCLINE>117</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>119</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>120</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>120</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>121</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>122</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>123</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>124</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>125</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>126</LINE>
        <COLUMN>15</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>“clPlatformIDs”可能为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>127</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“clPlatformIDs”是“clGetPlatformIDs”的输入/输出参数(在 d:\zsyblah\documents\codes\infomov\lib\opencl\inc\cl\cl.h:641 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>128</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>129</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>130</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>131</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>131</LINE>
        <COLUMN>23</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此循环(假定“i&lt;num_platforms”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>133</LINE>
        <COLUMN>2</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>已取消对“clPlatformIDs”的引用，但可能仍为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>opencl.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>6054</DEFECTCODE>
    <DESCRIPTION>可能没有为字符串“chBuffer”添加字符串零终止符。</DESCRIPTION>
    <FUNCTION>getPlatformID</FUNCTION>
    <DECORATED>?getPlatformID@@YAHPEAPEAU_cl_platform_id@@@Z</DECORATED>
    <FUNCLINE>117</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>119</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>此表达式不能为“chBuffer”添加字符串零终止符</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>120</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>120</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>121</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>122</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>123</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>124</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>125</LINE>
        <COLUMN>19</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>跳过此分支(假定“num_platforms==0”为 false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>126</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>127</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>128</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>129</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>130</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>131</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>131</LINE>
        <COLUMN>23</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此循环(假定“i&lt;num_platforms”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>133</LINE>
        <COLUMN>2</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“chBuffer”是“clGetPlatformInfo”中的输出(在 d:\zsyblah\documents\codes\infomov\lib\opencl\inc\cl\cl.h:646 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>134</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“chBuffer”是“printf”中的输出(在 d:\windows kits\10\include\10.0.22621.0\ucrt\stdio.h:950 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>131</LINE>
        <COLUMN>40</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>131</LINE>
        <COLUMN>23</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>退出此循环(“i&lt;num_platforms”为 false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>136</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>136</LINE>
        <COLUMN>23</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此循环(假定“j&lt;2”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>136</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>136</LINE>
        <COLUMN>51</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此循环(假定“k&lt;3”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>136</LINE>
        <COLUMN>74</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>136</LINE>
        <COLUMN>83</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此循环(假定“i&lt;num_platforms”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>138</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>139</LINE>
        <COLUMN>28</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>跳过此分支(假定“((error!=0))||((devCount==0))”为 false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>140</LINE>
        <COLUMN>2</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“chBuffer”是“clGetPlatformInfo”中的输出(在 d:\zsyblah\documents\codes\infomov\lib\opencl\inc\cl\cl.h:646 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>141</LINE>
        <COLUMN>25</COLUMN>
        <KEYEVENT>
          <ID>12</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此分支(假定“deviceOrder[j][k][0]”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>141</LINE>
        <COLUMN>32</COLUMN>
        <KEYEVENT>
          <ID>13</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“chBuffer”是对“strstr”的输入(在 d:\windows kits\10\include\10.0.22621.0\ucrt\string.h:518 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>141</LINE>
        <COLUMN>32</COLUMN>
        <KEYEVENT>
          <ID>14</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>“chBuffer”必须由“strstr”上的 SAL 批注添加字符串零终止符</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>opencl.cpp</FILENAME>
      <LINE>152</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Buffer::size。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Buffer::{ctor}</FUNCTION>
    <DECORATED>??0Buffer@@QEAA@IPEAXI@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Buffer::size</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>opencl.cpp</FILENAME>
      <LINE>262</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Kernel::{ctor}::Include::end。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Kernel::{ctor}::Include::{ctor}</FUNCTION>
    <DECORATED>??0Include@?1???0Kernel@@QEAA@PEAD0@Z@QEAA@XZ</DECORATED>
    <FUNCLINE>262</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Kernel::{ctor}::Include::end</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>opencl.cpp</FILENAME>
      <LINE>245</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Kernel::vbo_cl。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Kernel::{ctor}</FUNCTION>
    <DECORATED>??0Kernel@@QEAA@PEAD0@Z</DECORATED>
    <FUNCLINE>245</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Kernel::vbo_cl</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>opencl.cpp</FILENAME>
      <LINE>573</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6283</DEFECTCODE>
    <DESCRIPTION>“devices”使用数组 new [] 分配，但使用标量 delete 删除。</DESCRIPTION>
    <FUNCTION>Kernel::InitCL</FUNCTION>
    <DECORATED>?InitCL@Kernel@@SA_NXZ</DECORATED>
    <FUNCLINE>424</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>432</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>573</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>opencl.cpp</FILENAME>
      <LINE>447</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>6387</DEFECTCODE>
    <DESCRIPTION>"extensions" 可以是 "0"。</DESCRIPTION>
    <FUNCTION>Kernel::InitCL</FUNCTION>
    <DECORATED>?InitCL@Kernel@@SA_NXZ</DECORATED>
    <FUNCLINE>424</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>426</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>427</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>428</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>429</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>430</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>431</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>432</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>433</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>434</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>436</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>436</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>437</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>437</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>441</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>442</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>443</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>445</LINE>
        <COLUMN>9</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>“extensions”可能为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>446</LINE>
        <COLUMN>3</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“extensions”是“clGetDeviceInfo”的输入/输出参数(在 d:\zsyblah\documents\codes\infomov\lib\opencl\inc\cl\cl.h:661 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>447</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“extensions”是对“std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::{ctor}”的输入(在 d:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.35.32215\include\xstring:2673 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>opencl.cpp</FILENAME>
        <LINE>447</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>“extensions”不应为 NULL，因为这与“std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::{ctor}”上的 SAL 批注不一致</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>sprite.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Sprite::Draw</FUNCTION>
    <DECORATED>?Draw@Sprite@Tmpl8@@QEAAXPEAVSurface@2@HH@Z</DECORATED>
    <FUNCLINE>28</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>sprite.cpp</FILENAME>
      <LINE>37</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Sprite::Draw</FUNCTION>
    <DECORATED>?Draw@Sprite@Tmpl8@@QEAAXPEAVSurface@2@HH@Z</DECORATED>
    <FUNCLINE>28</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>sprite.cpp</FILENAME>
      <LINE>37</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Sprite::Draw</FUNCTION>
    <DECORATED>?Draw@Sprite@Tmpl8@@QEAAXPEAVSurface@2@HH@Z</DECORATED>
    <FUNCLINE>28</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>sprite.cpp</FILENAME>
      <LINE>58</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Sprite::Draw</FUNCTION>
    <DECORATED>?Draw@Sprite@Tmpl8@@QEAAXPEAVSurface@2@HH@Z</DECORATED>
    <FUNCLINE>28</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>sprite.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Sprite::InitializeStartData</FUNCTION>
    <DECORATED>?InitializeStartData@Sprite@Tmpl8@@QEAAXXZ</DECORATED>
    <FUNCLINE>75</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>sprite.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Sprite::InitializeStartData</FUNCTION>
    <DECORATED>?InitializeStartData@Sprite@Tmpl8@@QEAAXXZ</DECORATED>
    <FUNCLINE>75</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>sprite.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Sprite::InitializeStartData</FUNCTION>
    <DECORATED>?InitializeStartData@Sprite@Tmpl8@@QEAAXXZ</DECORATED>
    <FUNCLINE>75</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1048</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad2</FUNCTION>
    <DECORATED>?stbi__malloc_mad2@@YAPEAXHHH@Z</DECORATED>
    <FUNCLINE>1045</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1048</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad2</FUNCTION>
    <DECORATED>?stbi__malloc_mad2@@YAPEAXHHH@Z</DECORATED>
    <FUNCLINE>1045</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1055</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad3</FUNCTION>
    <DECORATED>?stbi__malloc_mad3@@YAPEAXHHHH@Z</DECORATED>
    <FUNCLINE>1052</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1055</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad3</FUNCTION>
    <DECORATED>?stbi__malloc_mad3@@YAPEAXHHHH@Z</DECORATED>
    <FUNCLINE>1052</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1055</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad3</FUNCTION>
    <DECORATED>?stbi__malloc_mad3@@YAPEAXHHHH@Z</DECORATED>
    <FUNCLINE>1052</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1062</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad4</FUNCTION>
    <DECORATED>?stbi__malloc_mad4@@YAPEAXHHHHH@Z</DECORATED>
    <FUNCLINE>1059</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1062</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad4</FUNCTION>
    <DECORATED>?stbi__malloc_mad4@@YAPEAXHHHHH@Z</DECORATED>
    <FUNCLINE>1059</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1062</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad4</FUNCTION>
    <DECORATED>?stbi__malloc_mad4@@YAPEAXHHHHH@Z</DECORATED>
    <FUNCLINE>1059</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1062</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad4</FUNCTION>
    <DECORATED>?stbi__malloc_mad4@@YAPEAXHHHHH@Z</DECORATED>
    <FUNCLINE>1059</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1192</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__convert_8_to_16</FUNCTION>
    <DECORATED>?stbi__convert_8_to_16@@YAPEAGPEAEHHH@Z</DECORATED>
    <FUNCLINE>1186</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1211</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 - ，然后将结果转换到 8 字节值。在调用运算符 - 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__vertical_flip</FUNCTION>
    <DECORATED>?stbi__vertical_flip@@YAXPEAXHHH@Z</DECORATED>
    <FUNCLINE>1202</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1211</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 - ，然后将结果转换到 8 字节值。在调用运算符 - 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__vertical_flip</FUNCTION>
    <DECORATED>?stbi__vertical_flip@@YAXPEAXHHH@Z</DECORATED>
    <FUNCLINE>1202</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1750</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__convert_format</FUNCTION>
    <DECORATED>?stbi__convert_format@@YAPEAEPEAEHHII@Z</DECORATED>
    <FUNCLINE>1735</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1750</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__convert_format</FUNCTION>
    <DECORATED>?stbi__convert_format@@YAPEAEPEAEHHII@Z</DECORATED>
    <FUNCLINE>1735</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1751</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__convert_format</FUNCTION>
    <DECORATED>?stbi__convert_format@@YAPEAEPEAEHHII@Z</DECORATED>
    <FUNCLINE>1735</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1751</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__convert_format</FUNCTION>
    <DECORATED>?stbi__convert_format@@YAPEAEPEAEHHII@Z</DECORATED>
    <FUNCLINE>1735</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1800</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1792</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1800</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1792</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1800</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1792</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1807</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1792</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1807</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1792</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1808</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1792</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1808</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1792</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>2988</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2915</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3019</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2915</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>2933</LINE>
      <COLUMN>75</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2915</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>2933</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2915</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>2933</LINE>
      <COLUMN>79</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2915</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>2961</LINE>
      <COLUMN>82</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2915</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3056</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__jpeg_finish</FUNCTION>
    <DECORATED>?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>3046</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3058</LINE>
      <COLUMN>75</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__jpeg_finish</FUNCTION>
    <DECORATED>?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>3046</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3058</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__jpeg_finish</FUNCTION>
    <DECORATED>?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>3046</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3058</LINE>
      <COLUMN>79</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__jpeg_finish</FUNCTION>
    <DECORATED>?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>3046</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3533</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__resample_row_hv_2_simd</FUNCTION>
    <DECORATED>?stbi__resample_row_hv_2_simd@@YAPEAEPEAE00HH@Z</DECORATED>
    <FUNCLINE>3476</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3850</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>load_jpeg_image</FUNCTION>
    <DECORATED>?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z</DECORATED>
    <FUNCLINE>3811</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3873</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>load_jpeg_image</FUNCTION>
    <DECORATED>?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z</DECORATED>
    <FUNCLINE>3811</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3873</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>load_jpeg_image</FUNCTION>
    <DECORATED>?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z</DECORATED>
    <FUNCLINE>3811</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4621</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4594</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4630</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4594</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4710</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4594</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4723</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4594</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4724</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4594</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4724</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4594</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4773</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4594</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4837</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4806</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4837</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4806</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4837</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4806</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4838</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4806</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4838</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4806</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4838</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4806</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5637</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5467</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5637</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5467</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5638</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5467</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5638</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5467</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5638</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 - ，然后将结果转换到 8 字节值。在调用运算符 - 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5467</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5669</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>switch 标签之间的尾随 fallthrough (es.78)。</DESCRIPTION>
    <FUNCTION>stbi__tga_get_comp</FUNCTION>
    <DECORATED>?stbi__tga_get_comp@@YAHHHPEAH@Z</DECORATED>
    <FUNCLINE>5661</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5858</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__tga_load</FUNCTION>
    <DECORATED>?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5793</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5858</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__tga_load</FUNCTION>
    <DECORATED>?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5793</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6715</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6700</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6716</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6700</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6724</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6700</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6725</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6700</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6758</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6700</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6758</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6700</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6762</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6700</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6885</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>函数使用堆叠的 "35036" 字节。请考虑将一些数据移动到堆。</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>6885</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6916</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>6885</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6932</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>6885</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6943</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>6885</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6943</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 - ，然后将结果转换到 8 字节值。在调用运算符 - 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>6885</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6945</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>6885</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6970</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>函数使用堆叠的 "34980" 字节。请考虑将一些数据移动到堆。</DESCRIPTION>
    <FUNCTION>stbi__gif_load</FUNCTION>
    <DECORATED>?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>6970</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7071</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>switch 标签之间的尾随 fallthrough (es.78)。</DESCRIPTION>
    <FUNCTION>stbi__hdr_convert</FUNCTION>
    <DECORATED>?stbi__hdr_convert@@YAXPEAMPEAEH@Z</DECORATED>
    <FUNCLINE>7053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7074</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26819</DEFECTCODE>
    <DESCRIPTION>switch 标签之间的尾随 fallthrough (es.78)。</DESCRIPTION>
    <FUNCTION>stbi__hdr_convert</FUNCTION>
    <DECORATED>?stbi__hdr_convert@@YAXPEAMPEAEH@Z</DECORATED>
    <FUNCLINE>7053</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7145</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7080</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7145</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7080</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7145</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7080</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7202</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7080</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7202</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7080</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7202</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7080</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\lib\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7202</LINE>
      <COLUMN>75</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7080</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>surface.cpp</FILENAME>
      <LINE>25</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Surface::{ctor}</FUNCTION>
    <DECORATED>??0Surface@Tmpl8@@QEAA@HH@Z</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>surface.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>6387</DEFECTCODE>
    <DESCRIPTION>"f" 可以是 "0"。</DESCRIPTION>
    <FUNCTION>Tmpl8::Surface::{ctor}</FUNCTION>
    <DECORATED>??0Surface@Tmpl8@@QEAA@PEBD@Z</DECORATED>
    <FUNCLINE>28</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>28</LINE>
        <COLUMN>45</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>28</LINE>
        <COLUMN>57</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>28</LINE>
        <COLUMN>70</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.h</FILENAME>
        <LINE>62</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>30</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>31</LINE>
        <COLUMN>5</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“f”可能为 NULL (进入此分支)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>31</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>32</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“f”是对“fclose”的输入(在 d:\windows kits\10\include\10.0.22621.0\ucrt\stdio.h:152 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>32</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>“f”不应为 NULL，因为这与“fclose”上的 SAL 批注不一致</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>surface.cpp</FILENAME>
      <LINE>55</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>取消对 NULL 指针“pixels”的引用。</DESCRIPTION>
    <FUNCTION>Tmpl8::Surface::LoadFromFile</FUNCTION>
    <DECORATED>?LoadFromFile@Surface@Tmpl8@@QEAAXPEBD@Z</DECORATED>
    <FUNCLINE>36</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>38</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>39</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>40</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>42</LINE>
        <COLUMN>9</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>“pixels”可能为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>43</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>44</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>45</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>跳过此分支(假定“n==1”为 false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>55</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>55</LINE>
        <COLUMN>21</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此循环(假定“i&lt;s”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>55</LINE>
        <COLUMN>41</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>已取消对“pixels”的引用，但可能仍为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>surface.cpp</FILENAME>
      <LINE>55</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>6386</DEFECTCODE>
    <DESCRIPTION>写入 "pixels" 时缓冲区溢出。</DESCRIPTION>
    <FUNCTION>Tmpl8::Surface::LoadFromFile</FUNCTION>
    <DECORATED>?LoadFromFile@Surface@Tmpl8@@QEAAXPEBD@Z</DECORATED>
    <FUNCLINE>36</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>38</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>39</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>40</LINE>
        <COLUMN>5</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此分支(假定“data”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>42</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>43</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>44</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>45</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>跳过此分支(假定“n==1”为 false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>55</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>55</LINE>
        <COLUMN>21</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此循环(假定“i&lt;s”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>55</LINE>
        <COLUMN>41</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>55</LINE>
        <COLUMN>27</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>“i”可能等于 1</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>55</LINE>
        <COLUMN>21</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>继续此循环(假定“i&lt;s”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>surface.cpp</FILENAME>
        <LINE>55</LINE>
        <COLUMN>41</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>写入到“pixels”无效(位于其可写范围之外)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>surface.cpp</FILENAME>
      <LINE>42</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Surface::LoadFromFile</FUNCTION>
    <DECORATED>?LoadFromFile@Surface@Tmpl8@@QEAAXPEBD@Z</DECORATED>
    <FUNCLINE>36</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>surface.cpp</FILENAME>
      <LINE>94</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Surface::Bar</FUNCTION>
    <DECORATED>?Bar@Surface@Tmpl8@@QEAAXHHHHI@Z</DECORATED>
    <FUNCLINE>86</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>surface.cpp</FILENAME>
      <LINE>109</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Surface::Print</FUNCTION>
    <DECORATED>?Print@Surface@Tmpl8@@QEAAXPEBDHHI@Z</DECORATED>
    <FUNCLINE>102</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>surface.cpp</FILENAME>
      <LINE>155</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Surface::Line</FUNCTION>
    <DECORATED>?Line@Surface@Tmpl8@@QEAAXMMMMI@Z</DECORATED>
    <FUNCLINE>124</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>surface.cpp</FILENAME>
      <LINE>173</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Surface::CopyTo</FUNCTION>
    <DECORATED>?CopyTo@Surface@Tmpl8@@QEAAXPEAV12@HH@Z</DECORATED>
    <FUNCLINE>160</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>surface.cpp</FILENAME>
      <LINE>176</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Surface::CopyTo</FUNCTION>
    <DECORATED>?CopyTo@Surface@Tmpl8@@QEAAXPEAV12@HH@Z</DECORATED>
    <FUNCLINE>160</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>surface.cpp</FILENAME>
      <LINE>179</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>Tmpl8::Surface::CopyTo</FUNCTION>
    <DECORATED>?CopyTo@Surface@Tmpl8@@QEAAXPEAV12@HH@Z</DECORATED>
    <FUNCLINE>160</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>13</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::int2::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::int2::{ctor}</FUNCTION>
    <DECORATED>??0int2@Tmpl8@@QEAA@HH@Z</DECORATED>
    <FUNCLINE>13</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::int2::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>14</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::int2::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::int2::{ctor}</FUNCTION>
    <DECORATED>??0int2@Tmpl8@@QEAA@H@Z</DECORATED>
    <FUNCLINE>14</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::int2::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>21</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::uint2::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::uint2::{ctor}</FUNCTION>
    <DECORATED>??0uint2@Tmpl8@@QEAA@HH@Z</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::uint2::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>22</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::uint2::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::uint2::{ctor}</FUNCTION>
    <DECORATED>??0uint2@Tmpl8@@QEAA@I@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::uint2::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>29</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::float2::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::float2::{ctor}</FUNCTION>
    <DECORATED>??0float2@Tmpl8@@QEAA@MM@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::float2::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>30</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::float2::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::float2::{ctor}</FUNCTION>
    <DECORATED>??0float2@Tmpl8@@QEAA@M@Z</DECORATED>
    <FUNCLINE>30</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::float2::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>31</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::float2::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::float2::{ctor}</FUNCTION>
    <DECORATED>??0float2@Tmpl8@@QEAA@Uint2@1@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::float2::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>39</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::int4::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::int4::{ctor}</FUNCTION>
    <DECORATED>??0int4@Tmpl8@@QEAA@HHHH@Z</DECORATED>
    <FUNCLINE>39</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::int4::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>40</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::int4::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::int4::{ctor}</FUNCTION>
    <DECORATED>??0int4@Tmpl8@@QEAA@H@Z</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::int4::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>48</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::int3::&lt;unnamed-tag&gt;::&lt;unnamed-tag&gt;::dummy。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::int3::{ctor}</FUNCTION>
    <DECORATED>??0int3@Tmpl8@@QEAA@HHH@Z</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::int3::&lt;unnamed-tag&gt;::&lt;unnamed-tag&gt;::dummy</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>49</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::int3::&lt;unnamed-tag&gt;::&lt;unnamed-tag&gt;::dummy。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::int3::{ctor}</FUNCTION>
    <DECORATED>??0int3@Tmpl8@@QEAA@H@Z</DECORATED>
    <FUNCLINE>49</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::int3::&lt;unnamed-tag&gt;::&lt;unnamed-tag&gt;::dummy</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>50</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::int3::&lt;unnamed-tag&gt;::&lt;unnamed-tag&gt;::dummy。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::int3::{ctor}</FUNCTION>
    <DECORATED>??0int3@Tmpl8@@QEAA@Uint4@1@@Z</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::int3::&lt;unnamed-tag&gt;::&lt;unnamed-tag&gt;::dummy</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>58</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::uint4::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::uint4::{ctor}</FUNCTION>
    <DECORATED>??0uint4@Tmpl8@@QEAA@IIII@Z</DECORATED>
    <FUNCLINE>58</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::uint4::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>59</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::uint4::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::uint4::{ctor}</FUNCTION>
    <DECORATED>??0uint4@Tmpl8@@QEAA@I@Z</DECORATED>
    <FUNCLINE>59</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::uint4::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>67</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::uint3::&lt;unnamed-tag&gt;::&lt;unnamed-tag&gt;::dummy。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::uint3::{ctor}</FUNCTION>
    <DECORATED>??0uint3@Tmpl8@@QEAA@III@Z</DECORATED>
    <FUNCLINE>67</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::uint3::&lt;unnamed-tag&gt;::&lt;unnamed-tag&gt;::dummy</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>68</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::uint3::&lt;unnamed-tag&gt;::&lt;unnamed-tag&gt;::dummy。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::uint3::{ctor}</FUNCTION>
    <DECORATED>??0uint3@Tmpl8@@QEAA@I@Z</DECORATED>
    <FUNCLINE>68</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::uint3::&lt;unnamed-tag&gt;::&lt;unnamed-tag&gt;::dummy</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>69</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::uint3::&lt;unnamed-tag&gt;::&lt;unnamed-tag&gt;::dummy。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::uint3::{ctor}</FUNCTION>
    <DECORATED>??0uint3@Tmpl8@@QEAA@Uuint4@1@@Z</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::uint3::&lt;unnamed-tag&gt;::&lt;unnamed-tag&gt;::dummy</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>77</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::float4::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::float4::{ctor}</FUNCTION>
    <DECORATED>??0float4@Tmpl8@@QEAA@MMMM@Z</DECORATED>
    <FUNCLINE>77</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::float4::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>78</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::float4::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::float4::{ctor}</FUNCTION>
    <DECORATED>??0float4@Tmpl8@@QEAA@M@Z</DECORATED>
    <FUNCLINE>78</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::float4::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>87</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::float3::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::float3::{ctor}</FUNCTION>
    <DECORATED>??0float3@Tmpl8@@QEAA@MMM@Z</DECORATED>
    <FUNCLINE>87</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::float3::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>88</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::float3::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::float3::{ctor}</FUNCTION>
    <DECORATED>??0float3@Tmpl8@@QEAA@M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::float3::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::float3::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::float3::{ctor}</FUNCTION>
    <DECORATED>??0float3@Tmpl8@@QEAA@Ufloat4@1@@Z</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::float3::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>90</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::float3::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::float3::{ctor}</FUNCTION>
    <DECORATED>??0float3@Tmpl8@@QEAA@Uuint3@1@@Z</DECORATED>
    <FUNCLINE>90</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::float3::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>99</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::uchar4::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::uchar4::{ctor}</FUNCTION>
    <DECORATED>??0uchar4@Tmpl8@@QEAA@EEEE@Z</DECORATED>
    <FUNCLINE>99</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::uchar4::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>100</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::uchar4::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::uchar4::{ctor}</FUNCTION>
    <DECORATED>??0uchar4@Tmpl8@@QEAA@E@Z</DECORATED>
    <FUNCLINE>100</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::uchar4::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>121</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>28251</DEFECTCODE>
    <DESCRIPTION>“fminf”的批注不一致: 此实例包含 无批注。请参见 d:\windows kits\10\include\10.0.22621.0\ucrt\corecrt_math.h(563)。</DESCRIPTION>
    <FUNCTION>fminf</FUNCTION>
    <DECORATED>fminf</DECORATED>
    <FUNCLINE>121</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.h</FILENAME>
      <LINE>122</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>28251</DEFECTCODE>
    <DESCRIPTION>“fmaxf”的批注不一致: 此实例包含 无批注。请参见 d:\windows kits\10\include\10.0.22621.0\ucrt\corecrt_math.h(562)。</DESCRIPTION>
    <FUNCTION>fmaxf</FUNCTION>
    <DECORATED>fmaxf</DECORATED>
    <FUNCLINE>122</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>opencl.h</FILENAME>
      <LINE>13</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Buffer::textureID。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Buffer::{ctor}</FUNCTION>
    <DECORATED>??0Buffer@@QEAA@XZ</DECORATED>
    <FUNCLINE>13</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Buffer::textureID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>template.cpp</FILENAME>
      <LINE>335</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 JobManager::m_ThreadDone。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>JobManager::{ctor}</FUNCTION>
    <DECORATED>??0JobManager@@IEAA@I@Z</DECORATED>
    <FUNCLINE>335</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>JobManager::m_ThreadDone</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>template.cpp</FILENAME>
      <LINE>409</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>取消对 NULL 指针“pi”的引用。</DESCRIPTION>
    <FUNCTION>JobManager::GetProcessorCount</FUNCTION>
    <DECORATED>?GetProcessorCount@JobManager@@SAXAEAI0@Z</DECORATED>
    <FUNCLINE>391</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>template.cpp</FILENAME>
        <LINE>394</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>template.cpp</FILENAME>
        <LINE>395</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>template.cpp</FILENAME>
        <LINE>396</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>template.cpp</FILENAME>
        <LINE>397</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>template.cpp</FILENAME>
        <LINE>399</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>template.cpp</FILENAME>
        <LINE>401</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>template.cpp</FILENAME>
        <LINE>402</LINE>
        <COLUMN>39</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>template.cpp</FILENAME>
        <LINE>404</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>template.cpp</FILENAME>
        <LINE>405</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>template.cpp</FILENAME>
        <LINE>406</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>template.cpp</FILENAME>
        <LINE>408</LINE>
        <COLUMN>46</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>“pi”可能为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>template.cpp</FILENAME>
        <LINE>409</LINE>
        <COLUMN>26</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>跳过此分支(假定“&lt;分支条件&gt;”为 false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
        <FILENAME>template.cpp</FILENAME>
        <LINE>409</LINE>
        <COLUMN>26</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>已取消对“pi”的引用，但可能仍为 NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.cpp</FILENAME>
      <LINE>93</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::float4::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::float4::{ctor}</FUNCTION>
    <DECORATED>??0float4@Tmpl8@@QEAA@AEBUfloat3@1@M@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::float4::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.cpp</FILENAME>
      <LINE>98</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::float4::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::float4::{ctor}</FUNCTION>
    <DECORATED>??0float4@Tmpl8@@QEAA@AEBUfloat3@1@@Z</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::float4::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.cpp</FILENAME>
      <LINE>103</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::int4::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::int4::{ctor}</FUNCTION>
    <DECORATED>??0int4@Tmpl8@@QEAA@AEBUint3@1@H@Z</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::int4::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>D:\ZSYblah\Documents\Codes\INFOMOV\template\</FILEPATH>
      <FILENAME>tmplmath.cpp</FILENAME>
      <LINE>108</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>未初始化变量 Tmpl8::uint4::&lt;unnamed-tag&gt;::cell。始终初始化成员变量(type.6)。</DESCRIPTION>
    <FUNCTION>Tmpl8::uint4::{ctor}</FUNCTION>
    <DECORATED>??0uint4@Tmpl8@@QEAA@AEBUuint3@1@I@Z</DECORATED>
    <FUNCLINE>108</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Tmpl8::uint4::&lt;unnamed-tag&gt;::cell</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT></DEFECTS>